{"ast":null,"code":"export const provider = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PROVIDER_LOADED':\n      return { ...state,\n        connection: action.connection\n      };\n\n    case 'NETWORK_LOADED':\n      return { ...state,\n        chainId: action.chainId\n      };\n\n    case 'ACCOUNT_LOADED':\n      return { ...state,\n        account: action.account\n      };\n\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state,\n        balance: action.balance\n      };\n\n    default:\n      return state;\n  }\n};\nexport const tokens = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loaded: false,\n    contracts: [],\n    symbols: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_1_LOADED':\n      return { ...state,\n        loaded: true,\n        contracts: [action.token],\n        symbols: [action.symbol]\n      };\n\n    case 'TOKEN_1_BALANCE_LOADED':\n      return { ...state,\n        balances: [action.balance]\n      };\n\n    case 'TOKEN_2_LOADED':\n      return { ...state,\n        loaded: true,\n        contracts: [...state.contracts, action.token],\n        symbols: [...state.symbols, action.symbol]\n      };\n\n    case 'TOKEN_2_BALANCE_LOADED':\n      return { ...state,\n        balances: [...state.balances, action.balance]\n      };\n\n    default:\n      return state;\n  }\n};\nconst DEFAULT_EXCHANGE_STATE = {\n  loaded: false,\n  contract: {},\n  transaction: {\n    isSuccessful: false\n  },\n  events: [],\n  allOrders: {\n    data: []\n  }\n};\nexport const exchange = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_EXCHANGE_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state,\n        loaded: true,\n        contract: action.exchange\n      };\n\n    case 'EXCHANGE_TOKEN_1_BALANCE_LOADED':\n      return { ...state,\n        balances: [action.balance]\n      };\n\n    case 'EXCHANGE_TOKEN_2_BALANCE_LOADED':\n      return { ...state,\n        balances: [...state.balances, action.balance]\n      };\n\n    case 'TRANSFER_REQUEST':\n      return { ...state,\n        transaction: {\n          transactionType: 'Transfer',\n          isPending: true,\n          isSuccessful: false\n        },\n        transferInProgress: true\n      };\n\n    case 'TRANSFER_SUCCESS':\n      return { ...state,\n        transaction: {\n          transactionType: 'Transfer',\n          isPending: false,\n          isSuccessful: true\n        },\n        transferInProgress: false,\n        events: [action.event, ...state.events]\n      };\n\n    case 'TRANSFER_FAIL':\n      return { ...state,\n        transaction: {\n          transactionType: 'Transfer',\n          isPending: false,\n          isSuccessful: false,\n          isError: true\n        },\n        transferInProgress: false\n      };\n\n    case 'NEW_ORDER_REQUEST':\n      return { ...state,\n        transaction: {\n          transactionType: 'New Order',\n          isPending: true,\n          isSuccessful: false\n        }\n      };\n\n    case 'NEW_ORDER_SUCCESS':\n      return { ...state,\n        allOrders: { ...state.allOrders,\n          data: [...state.allOrders.data, action.order]\n        },\n        transaction: {\n          transactionType: 'New Order',\n          isPending: false,\n          isSuccessful: true\n        },\n        events: [action.event, ...state.events]\n      };\n\n    case 'NEW_ORDER_FAIL':\n      return { ...state,\n        transaction: {\n          transactionType: 'Failed Order',\n          isPending: false,\n          isSuccessful: false,\n          isError: true\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["provider","state","action","type","connection","chainId","account","balance","tokens","loaded","contracts","symbols","token","symbol","balances","DEFAULT_EXCHANGE_STATE","contract","transaction","isSuccessful","events","allOrders","data","exchange","transactionType","isPending","transferInProgress","event","isError","order"],"sources":["/mnt/c/pr0/blockchain-developer-bootcamp/src/store/reducers.js"],"sourcesContent":["export const provider = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'PROVIDER_LOADED':\r\n      return {\r\n        ...state,\r\n        connection: action.connection\r\n      }\r\n    case 'NETWORK_LOADED':\r\n      return {\r\n        ...state,\r\n        chainId: action.chainId\r\n      }\r\n    case 'ACCOUNT_LOADED':\r\n      return {\r\n        ...state,\r\n        account: action.account\r\n      }\r\n    case 'ETHER_BALANCE_LOADED':\r\n      return {\r\n        ...state,\r\n        balance: action.balance\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const tokens = (state = {loaded: false, contracts: [], symbols: []}, action) => {\r\n  switch (action.type) {\r\n    case 'TOKEN_1_LOADED':\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        contracts: [action.token],\r\n        symbols: [action.symbol]\r\n      }\r\n    case 'TOKEN_1_BALANCE_LOADED':\r\n      return {\r\n        ...state,\r\n        balances: [action.balance]\r\n      }\r\n    case 'TOKEN_2_LOADED':\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        contracts: [...state.contracts, action.token],\r\n        symbols: [...state.symbols, action.symbol]\r\n      }\r\n    case 'TOKEN_2_BALANCE_LOADED':\r\n      return {\r\n        ...state,\r\n        balances: [...state.balances, action.balance]\r\n      }\r\n      default:\r\n        return state\r\n  }\r\n}\r\n\r\nconst DEFAULT_EXCHANGE_STATE = {\r\n  loaded: false,\r\n  contract: {},\r\n  transaction: {isSuccessful: false},\r\n  events: [],\r\n  allOrders: {\r\n    data: []}\r\n}\r\n\r\nexport const exchange = (state = DEFAULT_EXCHANGE_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'EXCHANGE_LOADED':\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        contract: action.exchange\r\n      }\r\n\r\n    case 'EXCHANGE_TOKEN_1_BALANCE_LOADED':\r\n      return {\r\n        ...state,\r\n        balances: [action.balance]\r\n      }\r\n    case 'EXCHANGE_TOKEN_2_BALANCE_LOADED':\r\n      return {\r\n        ...state,\r\n        balances: [...state.balances, action.balance]\r\n      }\r\n\r\n\r\n    case 'TRANSFER_REQUEST':\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          transactionType: 'Transfer',\r\n          isPending: true,\r\n          isSuccessful: false\r\n        },\r\n        transferInProgress: true\r\n      }\r\n\r\n    case 'TRANSFER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          transactionType: 'Transfer',\r\n          isPending: false,\r\n          isSuccessful: true\r\n        },\r\n        transferInProgress: false,\r\n        events: [action.event, ...state.events]\r\n      }\r\n\r\n    case 'TRANSFER_FAIL':\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          transactionType: 'Transfer',\r\n          isPending: false,\r\n          isSuccessful: false,\r\n          isError: true\r\n        },\r\n        transferInProgress: false,\r\n      }\r\n\r\n    case 'NEW_ORDER_REQUEST':\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          transactionType: 'New Order',\r\n          isPending: true,\r\n          isSuccessful: false\r\n        }\r\n      }\r\n\r\n    case 'NEW_ORDER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        allOrders:{\r\n          ...state.allOrders,\r\n          data: [...state.allOrders.data, action.order]\r\n        },\r\n        transaction: {\r\n          transactionType: 'New Order',\r\n          isPending: false,\r\n          isSuccessful: true,\r\n        },\r\n        events: [action.event, ...state.events]\r\n      }\r\n\r\n    case 'NEW_ORDER_FAIL':\r\n      return {\r\n        ...state,\r\n        transaction: {\r\n          transactionType: 'Failed Order',\r\n          isPending: false,\r\n          isSuccessful: false,\r\n          isError: true\r\n        }\r\n      }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}