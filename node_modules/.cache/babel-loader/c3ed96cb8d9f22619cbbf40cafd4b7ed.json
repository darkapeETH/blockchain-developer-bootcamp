{"ast":null,"code":"var _jsxFileName = \"/mnt/c/pr0/blockchain-developer-bootcamp/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json';\nimport { loadProvider, loadNetwork, loadAccount, loadTokens, loadExchange } from '../store/interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch); // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n\n    const chainId = await loadNetwork(provider, dispatch); // Fetch current account & balance from Metamask\n\n    await loadAccount(provider, dispatch); // Load token smart contracts\n\n    const DARK = config[chainId].DApp;\n    const mETH = config[chainId].mETH;\n    await loadTokens(provider, [DARK.address, mETH.address], dispatch); // Load exchange smart contract\n\n    const exchangeConfig = config[chainId].exchange;\n    const exchange = await loadExchange(provider, exchangeConfig.address, dispatch);\n    console.log(exchange);\n  };\n\n  useEffect(() => {\n    loadBlockchainData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"exchange grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--left grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--right grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useDispatch","config","loadProvider","loadNetwork","loadAccount","loadTokens","loadExchange","App","dispatch","loadBlockchainData","provider","chainId","DARK","DApp","mETH","address","exchangeConfig","exchange","console","log"],"sources":["/mnt/c/pr0/blockchain-developer-bootcamp/src/components/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json';\n\nimport {\n  loadProvider,\n  loadNetwork,\n  loadAccount,\n  loadTokens,\n  loadExchange\n} from '../store/interactions';\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch)\n\n    // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n    const chainId = await loadNetwork(provider, dispatch)\n\n    // Fetch current account & balance from Metamask\n    await loadAccount(provider, dispatch)\n\n    // Load token smart contracts\n    const DARK = config[chainId].DApp\n    const mETH = config[chainId].mETH\n    await loadTokens(provider, [DARK.address, mETH.address], dispatch)\n\n    // Load exchange smart contract\n    const exchangeConfig = config[chainId].exchange\n    const exchange = await loadExchange(provider, exchangeConfig.address, dispatch)\n    console.log (exchange)\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  })\n  \n  return (\n    <div>\n\n      {/* Navbar */}\n\n      <main className='exchange grid'>\n        <section className='exchange__section--left grid'>\n\n          {/* Markets */}\n\n          {/* Balance */}\n\n          {/* Order */}\n\n        </section>\n        <section className='exchange__section--right grid'>\n\n          {/* PriceChart */}\n\n          {/* Transactions */}\n\n          {/* Trades */}\n\n          {/* OrderBook */}\n\n        </section>\n      </main>\n\n      {/* Alert */}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,YALF,QAMO,uBANP;;;AAQA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;EAEA,MAAMS,kBAAkB,GAAG,YAAY;IACrC;IACA,MAAMC,QAAQ,GAAGR,YAAY,CAACM,QAAD,CAA7B,CAFqC,CAIrC;;IACA,MAAMG,OAAO,GAAG,MAAMR,WAAW,CAACO,QAAD,EAAWF,QAAX,CAAjC,CALqC,CAOrC;;IACA,MAAMJ,WAAW,CAACM,QAAD,EAAWF,QAAX,CAAjB,CARqC,CAUrC;;IACA,MAAMI,IAAI,GAAGX,MAAM,CAACU,OAAD,CAAN,CAAgBE,IAA7B;IACA,MAAMC,IAAI,GAAGb,MAAM,CAACU,OAAD,CAAN,CAAgBG,IAA7B;IACA,MAAMT,UAAU,CAACK,QAAD,EAAW,CAACE,IAAI,CAACG,OAAN,EAAeD,IAAI,CAACC,OAApB,CAAX,EAAyCP,QAAzC,CAAhB,CAbqC,CAerC;;IACA,MAAMQ,cAAc,GAAGf,MAAM,CAACU,OAAD,CAAN,CAAgBM,QAAvC;IACA,MAAMA,QAAQ,GAAG,MAAMX,YAAY,CAACI,QAAD,EAAWM,cAAc,CAACD,OAA1B,EAAmCP,QAAnC,CAAnC;IACAU,OAAO,CAACC,GAAR,CAAaF,QAAb;EACD,CAnBD;;EAqBAlB,SAAS,CAAC,MAAM;IACdU,kBAAkB;EACnB,CAFQ,CAAT;EAIA,oBACE;IAAA,uBAIE;MAAM,SAAS,EAAC,eAAhB;MAAA,wBACE;QAAS,SAAS,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAS,SAAS,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EAJF;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GA5DQF,G;UACUP,W;;;KADVO,G;AA8DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}