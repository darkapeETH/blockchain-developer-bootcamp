{"ast":null,"code":"export const provider = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PROVIDER_LOADED':\n      return { ...state,\n        connection: action.connection\n      };\n\n    case 'NETWORK_LOADED':\n      return { ...state,\n        chainId: action.chainId\n      };\n\n    case 'ACCOUNT_LOADED':\n      return { ...state,\n        account: action.account\n      };\n\n    default:\n      return state;\n  }\n};\nconst DEFAULT_TOKENS_STATE = {\n  loaded: false,\n  contracts: [],\n  symbols: []\n};\nexport const tokens = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_TOKENS_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_1_LOADED':\n      return { ...state,\n        loaded: true,\n        contracts: [...state.contracts, action.token],\n        symbols: [...state.symbols, action.symbol]\n      };\n\n    case 'TOKEN_2_LOADED':\n      return { ...state,\n        loaded: true,\n        contracts: [...state.contracts, action.token],\n        symbols: [...state.symbols, action.symbol]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["provider","state","action","type","connection","chainId","account","DEFAULT_TOKENS_STATE","loaded","contracts","symbols","tokens","token","symbol"],"sources":["/mnt/c/pr0/blockchain-developer-bootcamp/src/store/reducers.js"],"sourcesContent":["export const provider = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'PROVIDER_LOADED':\r\n      return {\r\n        ...state,\r\n        connection: action.connection\r\n      }\r\n    case 'NETWORK_LOADED':\r\n      return {\r\n        ...state,\r\n        chainId: action.chainId\r\n      }\r\n    case 'ACCOUNT_LOADED':\r\n      return {\r\n        ...state,\r\n        account: action.account\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst DEFAULT_TOKENS_STATE = { \r\n  loaded: false,\r\n  contracts: [],\r\n   symbols: [] \r\n }\r\n\r\nexport const tokens = (state = DEFAULT_TOKENS_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'TOKEN_1_LOADED':\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        contracts: [...state.contracts, action.token],\r\n        symbols: [...state.symbols, action.symbol]\r\n      }\r\n    case 'TOKEN_2_LOADED':\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        contracts: [...state.contracts, action.token],\r\n        symbols: [...state.symbols, action.symbol]\r\n      }\r\n      default:\r\n        return state\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,iBAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELG,UAAU,EAAEF,MAAM,CAACE;MAFd,CAAP;;IAIF,KAAK,gBAAL;MACE,OAAO,EACL,GAAGH,KADE;QAELI,OAAO,EAAEH,MAAM,CAACG;MAFX,CAAP;;IAIF,KAAK,gBAAL;MACE,OAAO,EACL,GAAGJ,KADE;QAELK,OAAO,EAAEJ,MAAM,CAACI;MAFX,CAAP;;IAKF;MACE,OAAOL,KAAP;EAlBJ;AAoBD,CArBM;AAuBP,MAAMM,oBAAoB,GAAG;EAC3BC,MAAM,EAAE,KADmB;EAE3BC,SAAS,EAAE,EAFgB;EAG1BC,OAAO,EAAE;AAHiB,CAA7B;AAMA,OAAO,MAAMC,MAAM,GAAG,YAA0C;EAAA,IAAzCV,KAAyC,uEAAjCM,oBAAiC;EAAA,IAAXL,MAAW;;EAC9D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,gBAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELO,MAAM,EAAE,IAFH;QAGLC,SAAS,EAAE,CAAC,GAAGR,KAAK,CAACQ,SAAV,EAAqBP,MAAM,CAACU,KAA5B,CAHN;QAILF,OAAO,EAAE,CAAC,GAAGT,KAAK,CAACS,OAAV,EAAmBR,MAAM,CAACW,MAA1B;MAJJ,CAAP;;IAMF,KAAK,gBAAL;MACE,OAAO,EACL,GAAGZ,KADE;QAELO,MAAM,EAAE,IAFH;QAGLC,SAAS,EAAE,CAAC,GAAGR,KAAK,CAACQ,SAAV,EAAqBP,MAAM,CAACU,KAA5B,CAHN;QAILF,OAAO,EAAE,CAAC,GAAGT,KAAK,CAACS,OAAV,EAAmBR,MAAM,CAACW,MAA1B;MAJJ,CAAP;;IAMA;MACE,OAAOZ,KAAP;EAhBN;AAkBD,CAnBM"},"metadata":{},"sourceType":"module"}