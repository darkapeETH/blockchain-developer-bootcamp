{"ast":null,"code":"var _jsxFileName = \"/mnt/c/pr0/blockchain-developer-bootcamp/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json';\nimport { loadProvider, loadNetwork, loadAccount, loadTokens, loadExchange, subscribeToEvents } from '../store/interactions';\nimport Navbar from './Navbar';\nimport Markets from './Markets';\nimport Balance from './Balance';\nimport Order from './Order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch); // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n\n    const chainId = await loadNetwork(provider, dispatch); // Reload page when network changes\n\n    window.ethereum.on('chainChanged', () => {\n      window.location.reload();\n    }); // Fetch current account & balance from Metamask when changed\n\n    window.ethereum.on('accountsChanged', () => {\n      loadAccount(provider, dispatch);\n    }); // Load token smart contracts\n\n    const DARK = config[chainId].DARK;\n    const mETH = config[chainId].mETH;\n    await loadTokens(provider, [DARK.address, mETH.address], dispatch); // Load exchange smart contract\n\n    const exchangeConfig = config[chainId].exchange;\n    const exchange = await loadExchange(provider, exchangeConfig.address, dispatch); // Subscribe to events\n\n    subscribeToEvents(exchange, dispatch);\n  };\n\n  useEffect(() => {\n    loadBlockchainData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"exchange grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--left grid\",\n        children: [/*#__PURE__*/_jsxDEV(Markets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--right grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useDispatch","config","loadProvider","loadNetwork","loadAccount","loadTokens","loadExchange","subscribeToEvents","Navbar","Markets","Balance","Order","App","dispatch","loadBlockchainData","provider","chainId","window","ethereum","on","location","reload","DARK","mETH","address","exchangeConfig","exchange"],"sources":["/mnt/c/pr0/blockchain-developer-bootcamp/src/components/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json';\n\nimport {\n  loadProvider,\n  loadNetwork,\n  loadAccount,\n  loadTokens,\n  loadExchange,\n  subscribeToEvents\n} from '../store/interactions';\n\nimport Navbar from './Navbar';\nimport Markets from './Markets';\nimport Balance from './Balance';\nimport Order from './Order';\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch)\n\n    // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n    const chainId = await loadNetwork(provider, dispatch)\n\n    // Reload page when network changes\n    window.ethereum.on('chainChanged', () => {\n      window.location.reload()\n    })\n\n    // Fetch current account & balance from Metamask when changed\n    window.ethereum.on('accountsChanged', () => {\n      loadAccount(provider, dispatch)\n    })\n\n    // Load token smart contracts\n    const DARK = config[chainId].DARK\n    const mETH = config[chainId].mETH\n    await loadTokens(provider, [DARK.address, mETH.address], dispatch)\n\n    // Load exchange smart contract\n    const exchangeConfig = config[chainId].exchange\n    const exchange = await loadExchange(provider, exchangeConfig.address, dispatch)\n\n    // Subscribe to events\n    subscribeToEvents(exchange, dispatch)\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  })\n  \n  return (\n    <div>\n\n      <Navbar /> \n\n      <main className='exchange grid'>\n        <section className='exchange__section--left grid'>\n\n          <Markets /> \n\n          <Balance />\n\n          <Order />\n\n        </section>\n        <section className='exchange__section--right grid'>\n\n          {/* PriceChart */}\n\n          {/* Transactions */}\n\n          {/* Trades */}\n\n          {/* OrderBook */}\n\n        </section>\n      </main>\n\n      {/* Alert */}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,YALF,EAMEC,iBANF,QAOO,uBAPP;AASA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;;EAEA,MAAMc,kBAAkB,GAAG,YAAY;IACrC;IACA,MAAMC,QAAQ,GAAGb,YAAY,CAACW,QAAD,CAA7B,CAFqC,CAIrC;;IACA,MAAMG,OAAO,GAAG,MAAMb,WAAW,CAACY,QAAD,EAAWF,QAAX,CAAjC,CALqC,CAOrC;;IACAI,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,cAAnB,EAAmC,MAAM;MACvCF,MAAM,CAACG,QAAP,CAAgBC,MAAhB;IACD,CAFD,EARqC,CAYrC;;IACAJ,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,EAAsC,MAAM;MAC1Cf,WAAW,CAACW,QAAD,EAAWF,QAAX,CAAX;IACD,CAFD,EAbqC,CAiBrC;;IACA,MAAMS,IAAI,GAAGrB,MAAM,CAACe,OAAD,CAAN,CAAgBM,IAA7B;IACA,MAAMC,IAAI,GAAGtB,MAAM,CAACe,OAAD,CAAN,CAAgBO,IAA7B;IACA,MAAMlB,UAAU,CAACU,QAAD,EAAW,CAACO,IAAI,CAACE,OAAN,EAAeD,IAAI,CAACC,OAApB,CAAX,EAAyCX,QAAzC,CAAhB,CApBqC,CAsBrC;;IACA,MAAMY,cAAc,GAAGxB,MAAM,CAACe,OAAD,CAAN,CAAgBU,QAAvC;IACA,MAAMA,QAAQ,GAAG,MAAMpB,YAAY,CAACS,QAAD,EAAWU,cAAc,CAACD,OAA1B,EAAmCX,QAAnC,CAAnC,CAxBqC,CA0BrC;;IACAN,iBAAiB,CAACmB,QAAD,EAAWb,QAAX,CAAjB;EACD,CA5BD;;EA8BAd,SAAS,CAAC,MAAM;IACde,kBAAkB;EACnB,CAFQ,CAAT;EAIA,oBACE;IAAA,wBAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAM,SAAS,EAAC,eAAhB;MAAA,wBACE;QAAS,SAAS,EAAC,8BAAnB;QAAA,wBAEE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QAFF,eAIE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QAJF,eAME,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAS,SAAS,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GArEQF,G;UACUZ,W;;;KADVY,G;AAuET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}