{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { get, groupBy, reject } from 'lodash';\nimport { ethers } from 'ethers';\nimport moment from 'moment';\nconst GREEN = '#25CE8F';\nconst RED = '#F45353';\nconst tokens = state => get(state, 'tokens.contracts');\nconst allOrders = state => get(state, 'exchange.allOrders.data', []);\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', []);\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', []);\nconst openOrders = state => {\n  const all = allOrders(state);\n  const filled = filledOrders(state);\n  const cancelled = cancelledOrders(state);\n  const openOrders = reject(allOrders, order => {\n    const orderFilled = filled.some(o => o.id.toString() === order.id.toString());\n    return orderFilled;\n  });\n  return openOrders;\n};\nconst decorateOrder = (order, tokens) => {\n  let token0Amount, token1Amount;\n  if (order.tokenGive === tokens[1].address) {\n    token0Amount = order.amountGive;\n    token1Amount = order.amountGet;\n  } else {\n    token0Amount = order.amountGet;\n    token1Amount = order.amountGive;\n  }\n  const precision = 100000;\n  let tokenPrice = token1Amount / token0Amount;\n  tokenPrice = Math.round(tokenPrice * precision) / precision;\n  return {\n    ...order,\n    token0Amount: ethers.utils.formatUnits(token0Amount, 'ether'),\n    token1Amount: ethers.utils.formatUnits(token1Amount, 'ether'),\n    tokenPrice,\n    formattedTimestamp: moment.unix(order.timestamp).format('h:mm:ssa d MMM D')\n  };\n};\n\n//Order Book\nexport const orderBookSelector = createSelector(openOrders, tokens, (orders, tokens) => {\n  if (!tokens[0] || !tokens[1]) {\n    return;\n  }\n  orders = orders.filter(o => o.tokenGet === tokens[0].address || o.tokenGet === tokens[1].address);\n  orders = orders.filter(o => o.tokenGive === tokens[0].address || o.tokenGive === tokens[1].address);\n\n  //Decorate the orders\n  orders = decorateOrderBookOrders(orders, tokens);\n\n  //Group ordes by orderType\n  orders = groupBy(orders, 'orderType');\n\n  //Sort Buy orders by highest token price\n  const buyOrders = get(orders, 'buy', []);\n  orders = {\n    ...orders,\n    buyOrders: buyOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\n  };\n\n  //Sort Sell orders by Highest token price\n  const sellOrders = get(orders, 'sell', []);\n  orders = {\n    ...orders,\n    sellOrders: sellOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\n  };\n  return orders;\n});\nconst decorateOrderBookOrders = (orders, tokens) => {\n  return orders.map(order => {\n    order = decorateOrder(order, tokens);\n    order = decorateOrderBookOrder(order, tokens);\n    return order;\n  });\n};\nconst decorateOrderBookOrder = (order, tokens) => {\n  const orderType = order.tokenGive === tokens[1].address ? 'buy' : 'sell';\n  return {\n    ...order,\n    orderType,\n    orderTypeClass: orderType === 'buy' ? GREEN : RED,\n    orderFillAction: orderType === 'buy' ? 'sell' : 'buy'\n  };\n};","map":{"version":3,"names":["createSelector","get","groupBy","reject","ethers","moment","GREEN","RED","tokens","state","allOrders","cancelledOrders","filledOrders","openOrders","all","filled","cancelled","order","orderFilled","some","o","id","toString","decorateOrder","token0Amount","token1Amount","tokenGive","address","amountGive","amountGet","precision","tokenPrice","Math","round","utils","formatUnits","formattedTimestamp","unix","timestamp","format","orderBookSelector","orders","filter","tokenGet","decorateOrderBookOrders","buyOrders","sort","a","b","sellOrders","map","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction"],"sources":["/mnt/c/pr0/blockchain-developer-bootcamp/src/store/selectors.js"],"sourcesContent":["import { createSelector } from 'reselect'\r\nimport { get, groupBy, reject } from 'lodash'\r\n\r\nimport { ethers } from 'ethers'\r\nimport moment from 'moment'\r\n\r\nconst GREEN = '#25CE8F'\r\nconst RED = '#F45353'\r\n\r\nconst tokens = state => get(state, 'tokens.contracts')\r\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\r\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\r\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\r\nconst openOrders = state => {\r\n\tconst all = allOrders(state)\r\n\tconst filled = filledOrders(state)\r\n\tconst cancelled = cancelledOrders(state)\r\n\r\n\tconst openOrders = reject(allOrders, (order) => {\r\n\t\tconst orderFilled = filled.some((o) => o.id.toString() === order.id.toString())\r\n\t\treturn(orderFilled)\r\n\t})\r\n\treturn openOrders\r\n}\r\n\r\nconst decorateOrder =  (order, tokens) => {\r\n\tlet token0Amount, token1Amount\r\n\r\n\tif (order.tokenGive === tokens[1].address) {\r\n\t\ttoken0Amount = order.amountGive\r\n\t\ttoken1Amount = order.amountGet\r\n\t} else {\r\n\t\ttoken0Amount = order.amountGet\r\n\t\ttoken1Amount = order.amountGive\t\t\r\n\t}\r\n\tconst precision = 100000\r\n\tlet tokenPrice = (token1Amount / token0Amount)\r\n\ttokenPrice = Math.round(tokenPrice * precision) / precision\r\n\r\n\treturn ({\r\n\t\t...order,\r\n\t\ttoken0Amount: ethers.utils.formatUnits(token0Amount,'ether'),\r\n\t\ttoken1Amount: ethers.utils.formatUnits(token1Amount,'ether'),\r\n\t\ttokenPrice,\r\n\t\tformattedTimestamp: moment.unix(order.timestamp).format('h:mm:ssa d MMM D')\r\n\t})\r\n}\r\n\r\n//Order Book\r\nexport const orderBookSelector = createSelector(\r\n\topenOrders,\r\n\ttokens,\r\n\t(orders, tokens) =>{\r\n\t\tif (!tokens[0] || !tokens[1]) {return}\r\n\r\n\t\torders = orders.filter((o) => o.tokenGet === tokens[0].address || o.tokenGet === tokens[1].address)\r\n\t\torders = orders.filter((o) => o.tokenGive === tokens[0].address || o.tokenGive === tokens[1].address)\r\n\r\n\t//Decorate the orders\r\n\torders = decorateOrderBookOrders(orders, tokens)\r\n\r\n\t//Group ordes by orderType\r\n\torders = groupBy(orders, 'orderType')\r\n\r\n\t//Sort Buy orders by highest token price\r\n\tconst buyOrders = get(orders, 'buy', [])\r\n\torders = {\r\n\t\t...orders,\r\n\t\tbuyOrders: buyOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\r\n\t}\r\n\r\n\t//Sort Sell orders by Highest token price\r\n\tconst sellOrders = get(orders, 'sell', [])\r\n\torders = {\r\n\t\t...orders,\r\n\t\tsellOrders: sellOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\r\n\t}\r\n\treturn orders\r\n}) \r\n\r\nconst decorateOrderBookOrders = (orders, tokens) => {\r\n\treturn(\r\n\t\torders.map((order) => {\r\n\t\t\torder = decorateOrder(order, tokens)\r\n\t\t\torder = decorateOrderBookOrder(order, tokens)\r\n\t\t\treturn(order)\r\n\t\t})\r\n\t)\r\n}\r\n\r\nconst decorateOrderBookOrder = (order, tokens) => {\r\n\tconst orderType = order.tokenGive === tokens[1].address ? 'buy' : 'sell'\r\n\r\n\treturn ({\r\n\t\t...order,\r\n\t\torderType,\r\n\t\torderTypeClass: (orderType === 'buy') ? GREEN : RED,\r\n\t\torderFillAction: (orderType === 'buy' ? 'sell' : 'buy')\r\n\t})\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}